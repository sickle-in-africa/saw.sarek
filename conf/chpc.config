/*
 *  CHPC 
 *  ====
 *
 *  Installation configuration file
 *
 *  Configuration file for CHPC cluster. 
 *  All parameter settings here are to be used with
 *  with the SAW instance installed there. They are
 *  specific to this installation but not to any
 *  specific project. 
 *   
 *****************************************************/

// Global default params, used in configs
params {

    profile = 'chpc'

    sarekDir = '/mnt/lustre/groups/CBBI1243/SADaCC/sequence-analysis-workflows/sarek'
    containersDir = '/mnt/lustre/groups/CBBI1243/SADaCC/containers'
    modulesDir = params.sarekDir + '/modules'

    // Workflow flags:

    // Mandatory arguments
    input = null // No default input

    // Genome and references options
    genome = 'GRCh38'
    igenomes_base = '/mnt/lustre/groups/CBBI1243/SADaCC/sequence-data/aws-igenomes/references'
    igenomes_ignore = false
    genomes_base = null // Disabled by default
    save_reference = null // Built references not saved

    // Main options
    help = false
    no_intervals = null // Intervals will be built from the fasta file
    nucleotides_per_second = 1000.0 // Default interval size
    sentieon = null // Not using Sentieon by default
    skip_qc = null // All QC tools are used
    target_bed = false // No default TargetBED file for targeted sequencing
    tools = null // No default Variant_Calling or Annotation tools

    // Modify fastqs (trim/split)
    trim_fastq = false // No trimming
    clip_r1 = 0
    clip_r2 = 0
    three_prime_clip_r1 = 0
    three_prime_clip_r2 = 0
    trim_nextseq = 0
    save_trimmed = false
    split_fastq = null // Fastq files will not be split by default

    // Preprocessing
    aligner = 'bwa-mem'
    samtoolsSortMemory = '2G'
    markdup_java_options = '"-Xms4000m -Xmx7g"' // Established values for markDuplicates memory consumption, see https://github.com/SciLifeLab/Sarek/pull/689 for details
    use_gatk_spark = false // GATK Spark implementation of their tools in local mode not used by default
    save_bam_mapped = null // Mapped BAMs not saved
    skip_markduplicates = null // Do not skip markDuplicates by default
    skip_baserecalibration = false
    known_indels = null

    // Variant Calling
    ascat_ploidy = null // Use default value
    ascat_purity = null // Use default value
    cf_coeff = "0.05"  // default value for Control-FREEC
    cf_ploidy = "2"     // you can use 2,3,4
    cf_window = null      // by default we are not using this in Control-FREEC
    generate_gvcf = null // g.vcf are not produced by HaplotypeCaller by default
    no_strelka_bp = null // Strelka will use Manta candidateSmallIndels if available
    pon = false // No default PON (Panel of Normals) file for GATK Mutect2 / Sentieon TNscope
    pon_index = false // No default PON index for GATK Mutect2 / Sentieon TNscope
    ignore_soft_clipped_bases = null // no --dont-use-soft-clipped-bases for GATK Mutect2
    umi = null // no umi
    read_structure1 = null // no umi
    read_structure2 = null // no umi
    genotypeGatkVariants = true

    // Annotation
    annotate_tools = null // Only with --step annotate
    annotation_cache = null // Annotation cache disabled
    cadd_cache = null // CADD cache disabled
    cadd_indels = false // No CADD InDels file
    cadd_indels_tbi = false // No CADD InDels index
    cadd_wg_snvs = false // No CADD SNVs file
    cadd_wg_snvs_tbi = false // No CADD SNVs index
    genesplicer = null // genesplicer disabled within VEP
    snpeff_cache = null // No directory for snpEff cache
    vep_cache = null // No directory for VEP cache

    // Custom config
    config_profile_contact = false
    config_profile_description = false
    config_profile_url = false
    custom_config_version = 'master'
    custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"

    // Other options
    outdir = './results'
    publish_dir_mode = 'move' // Default PublishDirMode (same as other nf-core pipelines)
    sequencing_center = null // No sequencing center to be written in BAM header in MapReads process
    multiqc_config = false
    monochrome_logs = false // Monochrome logs disabled
    email = false // No default email
    email_on_fail = false
    plaintext_email = false // Plaintext email disabled
    max_multiqc_email_size = 25.MB

    hostnames = false
    name = false // No default name
    tracedir = "${params.outdir}/pipeline_info"


    queue = 'serial'

    cpus = 8
    max_cpus = 22
    max_memory = 50.GB
    max_time = 40.h
    single_cpu_mem = 7.GB

    queueSize = 23
    submitRateLimit = '10 sec'

}

executor {
    name = 'pbspro'
}

process {
    beforeScript = 'module load chpc/singularity/3.5.3'
    clusterOptions = "-P CBBI1243 -l select=1 -q ${params.queue}"
}


// Container slug
// Stable releases should specify release tag (ie: `2.5.2`)
// Developmental code should specify dev
//process.container = 'nfcore/sarek:latest'
process.container = "${params.containersDir}/sarek_latest.sif"

// Load base.config by default for all pipelines
includeConfig "${params.sarekDir}/conf/base.config"

// Load nf-core custom profiles from different Institutions
try {
  includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/sarek custom profiles from different Institutions
try {
  includeConfig "${params.custom_config_base}/pipeline/sarek.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config/sarek profiles: ${params.custom_config_base}/pipeline/sarek.config")
}

singularity.autoMounts = true
singularity.enabled = true

// Load genomes.config or igenomes.config
if (!params.igenomes_ignore) {
  includeConfig "${params.sarekDir}/conf/igenomes.config"
} else {
  includeConfig "${params.sarekDir}/conf/genomes.config"
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}

manifest {
  name = 'nf-core/sarek'
  author = 'Maxime Garcia, Szilveszter Juhos'
  homePage = 'https://github.com/nf-core/sarek'
  description = 'An open-source analysis pipeline to detect germline or somatic variants from whole genome or targeted sequencing'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.04.0'
  version = '2.7'
}
